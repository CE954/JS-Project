{"version":3,"file":"main.js","mappings":"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","sources":["webpack://weather_app/./src/scripts/icon.js","webpack://weather_app/./src/scripts/burger.js","webpack://weather_app/./src/scripts/favorite.js","webpack://weather_app/./src/scripts/unitSwitch.js","webpack://weather_app/./src/scripts/forecast.js","webpack://weather_app/./src/scripts/quirkyBirdy.js","webpack://weather_app/./src/index.js","webpack://weather_app/./src/scripts/refreshPinned.js"],"sourcesContent":["// Get icons\nexport const scene = document.querySelector('.background');\n\nfunction getDayIcon(icon) {\n    switch (icon) {\n        case \"01d\":\n            // scene.style.background = \"url(/src/images/PartlyCloudy.svg)\";\n            return \"/src/images/day.svg\";\n        case \"02d\":\n            return \"/src/images/cloudy-day-1.svg\";\n        case \"03d\":\n            return \"/src/images/cloudy-day-2.svg\";\n        case \"04d\":\n            // scene.style.background = \"url(/../../images/SeaOfClouds.svg)\";\n            return \"/src/images/cloudy.svg\";\n        case \"09d\":\n            return \"/src/images/rainy-4.svg\";\n        case \"10d\":\n            return \"/src/images/rainy-6.svg\";\n        case \"11d\":\n            return \"/src/images/thunder.svg\";\n        case \"13d\":\n            return \"/src/images/snowy-6.svg\";\n        case \"50d\":\n            return \"/src/images/cloudy.svg\";\n    }\n}\n\nfunction getNightIcon(icon) {\n    switch (icon) {\n        case \"01n\":\n            // scene.style.background = \"url(/src/images/NightOfClouds.svg)\";\n            return \"/src/images/night.svg\";\n        case \"02n\":\n            // scene.style.background = \"url(/../../images/NightOfClouds.svg)\";\n            return \"/src/images/cloudy-night-1.svg\";\n        case \"03n\":\n            // scene.style.background = \"url(/../../images/NightOfClouds.svg)\";\n            return \"/src/images/cloudy-night-1.svg\";\n        case \"04n\":\n            // scene.style.background = \"url(/../../images/SeaOfClouds.svg)\";\n            return \"/src/images/cloudy-night-1.svg\";\n        case \"09n\":\n            return \"/src/images/rainy-4.svg\";\n        case \"10n\":\n            return \"/src/images/rainy-6.svg\";\n        case \"11n\":\n            return \"/src/images/thunder.svg\";\n        case \"13n\":\n            return \"/src/images/snowy-6.svg\";\n        case \"50n\":\n            return \"/src/images/cloudy.svg\";\n    }\n}\n\n// Create a separate function to handle the background image\n\nexport { getDayIcon, getNightIcon};","// open and close the favorites/burger menu\nconst favorite = document.querySelector('.favorites-menu');\nconst burger = document.querySelector('.burger');\n\nexport function openMenu() { \n    if (favorite.classList.contains('open')) {\n        favorite.classList.remove('open');\n        burger.style.background = \"url(/src/images/burger.svg)\";\n    } else { \n        favorite.classList.add('open');\n        burger.style.background = \"url('/src/images/close.svg')\";\n    }\n};\n\n","// Pin/favorite locations\n// Grab innerHTML of the current location and store it in an array\n\nexport const favorites = []; \nconst pin = document.querySelector('.pin');\n\nexport function pinToggle() {\n    let currentLocation = document.querySelector('.location').innerHTML;\n    let currentIcon = document.querySelector('.image img').src;\n    let currentTemp = document.querySelector('.temp').innerHTML;\n    if (!checkIfFavorited(currentLocation) || favorites.length === 0) {\n        favorites.push( [\n            currentLocation,\n            currentIcon,\n            currentTemp\n        ]);\n        displayPinnedLocations();\n        pin.classList.remove('unpinned');\n        pin.classList.add('pinned');\n    } else {\n        removeFromSidebar(currentLocation);\n        removeFromFavorites(currentLocation);\n    }\n }\n\n // Function to check if a location is already pinned\nexport function checkIfFavorited(location) { \n    for(let i = 0; i < favorites.length; i++) {\n        if (favorites[i][0] === location) {\n            return true;\n        }\n    }\n    return false;\n}\n\n// Function to splice the location from the favorites array\nexport function removeFromFavorites(location) {\n    for(let i = 0; i < favorites.length; i++) {\n        if (favorites[i][0] === location) {\n            favorites.splice(i, 1);\n            pin.classList.remove('pinned')\n            pin.classList.add('unpinned');\n        }\n    }\n}\n\n// Add a function to display the pinned locations\nexport function displayPinnedLocations() { \n    for (let i = 0; i < favorites.length; i++) {\n        let className = favorites[i][0].split(\" \").join(\"-\");\n        if (!document.querySelector(`.${className}`)) {\n            let pinnedLocation = document.createElement('div');\n            pinnedLocation.classList.add(`${className}`);\n            pinnedLocation.innerHTML = \"\";\n            pinnedLocation.innerHTML += `\n                <div class=\"pinned-location_name\">${favorites[i][0]}</div>\n                <div class=\"pinned-location_icon\"><img src=\"${favorites[i][1]}\" class=\"pinned-icon\" id=\"${className}\"></div>\n                <div class=\"pinned-location_temp\">${favorites[i][2]}</div>\n            `\n            document.querySelector('.favorites-menu nav').appendChild(pinnedLocation);\n        }\n    }\n}\n\n//testing\nwindow.displayPinnedLocations = displayPinnedLocations;\nwindow.favorites = favorites;\n\n// Add a function to remove the sidebar of locations\nexport function removeFromSidebar(location) {\n    let className = location.split(\" \").join(\"-\");\n    let toBeRemoved = document.querySelector(`.${className}`);\n    // console.log(toBeRemoved);\n    while (toBeRemoved.firstChild) {\n        toBeRemoved.removeChild(toBeRemoved.firstChild);\n    }\n    toBeRemoved.remove();\n}\n\n// check if favorites box is empty and display a message\nconst emptyMessage = document.querySelector('.empty-message');\n\nexport function checkIfEmpty() {\n    if (favorites.length === 0) {\n        emptyMessage.style.display = \"block\";\n    } else {    \n        emptyMessage.style.display = \"none\";\n    }\n}\n\n // Add a separate funciton to refresh the pinned locations (API call)\n\n // Function to click on location from pinned locations\n","// function to switch between farenheit and celsius\n\nconst units = [\"imperial\", \"metric\"];\nlet currentUnit = units[0];\n\nexport function unitSwitch() { \n    if (currentUnit === units[0]) {\n        currentUnit = units[1];\n    } else {\n        currentUnit = units[0];\n    }\n    return currentUnit;\n}\n\nexport function getUnitSymbol() {\n    if (currentUnit === \"imperial\") {\n        return \"°F\";\n    } else {\n        return \"°C\";\n    }\n}\n\nexport {currentUnit}\nwindow.unitSwitch = unitSwitch;","// Function to get 5 day forecast data\nimport { getDayIcon, getNightIcon } from './icon.js';\nimport {currentUnit, getUnitSymbol} from './unitSwitch.js';\n\nexport const key = \"62b8f696194b27ae3d38708afeb4c3cc\";\n\nexport function getForecast(lat, lon) {\n    fetch(`https://api.openweathermap.org/data/3.0/onecall?lat=${lat}&lon=${lon}&appid=${key}&units=${currentUnit}`)\n    .then(response => response.json())\n    .then(data => { \n        if (data.cod !== '404') { \n            displayHourlyForecast(data)\n            displayDailyForecast(data); \n        } else {\n            console.log('error');\n        }\n     })\n}\n\nwindow.getForecast = getForecast;\nwindow.displayDailyForecast = displayDailyForecast;\nwindow.deleteForecast = deleteForecast;\n\nexport function displayHourlyForecast(data) {\n    let hours = document.querySelector('.hours');\n    for (let i = 0; i <= 23; i++) {\n        let hour = document.createElement('div');\n        hour.classList.add('hour');\n        let temp = Math.round(data.hourly[i].temp);\n        let icon = data.hourly[i].weather[0].icon;\n        let src = \"\";\n\n        if (icon.includes(\"d\")) {\n            src = getDayIcon(icon);\n        } else {\n            src = getNightIcon(icon);\n        }\n\n        let dt = new Date (data.hourly[i].dt * 1000);\n        let conversion = timeConversion(dt.getHours())\n\n        hour.innerHTML = \"\";\n        hour.innerHTML += `\n            <div class=\"hour_time\">${conversion}</div>\n            <div class=\"hour_icon\"><img src=${src} alt=\"weather icon\"></div>\n            <div class=\"hour_temp\">${temp} ${getUnitSymbol()}</div>\n        `\n        hours.appendChild(hour);\n    }\n}\n\n// Convert from military time to standard time\n\nfunction timeConversion(hours) {\n    if (hours > 12) {\n        return `${hours - 12}pm`;\n    } else if (hours === 0) {\n        return `12am`;\n    } else {\n        return `${hours}am`;\n    }\n}\n\nconst week = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\nexport function displayDailyForecast(data) {\n    let days = document.querySelector('.days');\n    for (let i = 0; i <= 6; i++) {\n        let day = document.createElement('div');\n        day.classList.add('day');\n        let minTemp = Math.round(data.daily[i].temp.min);\n        let maxTemp = Math.round(data.daily[i].temp.max);\n        let icon = data.daily[i].weather[0].icon;\n        let src = \"\";\n\n        if (icon.includes(\"d\")) {\n            src = getDayIcon(icon);\n        } else {\n            src = getNightIcon(icon);\n        }\n\n        let dt = new Date (data.daily[i].dt * 1000);\n\n        day.innerHTML = \"\";\n        day.innerHTML += `\n            <div class=\"day_name\">${week[dt.getDay()]}</div>\n            <div class=\"day_icon\"><img src=${src} alt=\"weather icon\"></div>\n            <div class=\"day_temp\">${minTemp} - ${maxTemp} ${getUnitSymbol()}</div>\n            <div class=\"day_desc\">${capitalize(data.daily[i].weather[0].description)}</div>\n        `\n        days.appendChild(day);\n    }\n}\n\nexport function deleteForecast() {\n    let days = document.querySelector('.days');\n    days.innerHTML = \"\";\n}\n\nexport function deleteHourlyForecast() {\n    let hours = document.querySelector('.hours');\n    hours.innerHTML = \"\";\n}\n\nexport function capitalize(string) {\n    let str = string.split(\" \");\n    let newSent = str.map(word => word.charAt(0).toUpperCase() + word.slice(1));\n    return newSent.join(\" \");\n}\n","// Birdy will comment on the weather\nconst birdy = document.querySelector('.birdy');\nconst birdyComment = document.querySelector('.birdy p');\n\n// Birdy says his intro when the page loads\ndocument.addEventListener('DOMContentLoaded', birdyIntro, { once: true });\n\nexport function birdyWeatherComments() {\n\n}\n\nexport function birdyIntro() {\n    birdyComment.innerHTML = \"Hey there!\";\n    setTimeout(() => {\n        birdyComment.innerHTML = \"I'm here to help you find the weather!\";\n        setTimeout(() => {\n            birdyComment.innerHTML = \"Just type in a location and I'll do the rest!\";\n            setTimeout(() => {\n                birdyComment.innerHTML = \"Or, you can use your current location!\";\n                setTimeout(() => {\n                    birdyComment.innerHTML = \"I'll probably forget who you are because there's no cookies yet!\";\n                    setTimeout(() => {\n                        birdyComment.innerHTML = \"But, I hope you have a good time!\";\n                        clearBirdyComment();\n                }, 2500);\n            }, 2500);\n        }, 2500);\n    }, 2500);\n}, 2500);\n}\n\nexport function birdyUnitChange() {\n    birdyComment.innerHTML = \"Please refresh the data after changing units!\"\n    clearBirdyComment();\n}\n\n// Birdy gives some tips when hovering over certain elements\nlet geoSearch = document.querySelector('#geo-search');\ngeoSearch.addEventListener('mouseover', () => {\n    birdyComment.innerHTML = \"Click here to use your current location!\";\n    clearBirdyComment();\n}, {once: true});\n\n// Clear out Birdy comment\nfunction clearBirdyComment() {\n    setTimeout(() => {\n        birdyComment.innerHTML = \"\";\n    }, 2500);\n}\n\nlet refreshButton = document.querySelector('.refresh');\nrefreshButton.addEventListener('mouseover', () => {\n    birdyComment.innerHTML = \"Click here to refresh the data!\";\n    clearBirdyComment();\n}, { once: true });\n\nlet pinButton = document.querySelector('.pin');\npinButton.addEventListener('mouseover', () => {\n    birdyComment.innerHTML = \"Click here to pin or unpin the location!\";\n    clearBirdyComment();\n}, {once: true});\n\n// Birdy toggle \nlet birdyToggle = document.querySelector('#birdy-toggle');\nbirdyToggle.addEventListener('change', function() {\n    // if (birdy.style.display === \"none\") {\n    //     birdy.style.display = \"block\";\n    // } else {\n    //     birdy.style.display = \"none\";\n    // }\n    if (birdy) {\n       birdy.firstChild.remove();\n       birdy.remove()\n    } else {\n        let newBirdy = document.createElement(\"div\");\n        newBirdy.classList.add(\"birdy\");\n        let comment = document.createElement(\"p\")\n        newBirdy.appendChild(comment);\n        document.body.appendChild(newBirdy);\n    }\n});\n\nbirdyToggle.addEventListener('mouseover', () => {\n    birdyComment.innerHTML = \"If you don't like me, you can turn me off!\";\n    clearBirdyComment();\n}, {once: true});","import { getDayIcon, getNightIcon, scene } from \"./scripts/icon.js\";\nimport { openMenu } from \"./scripts/burger.js\";\nimport { pinToggle, checkIfEmpty, checkIfFavorited } from \"./scripts/favorite.js\";\nimport { key, getForecast, deleteForecast, capitalize, deleteHourlyForecast } from \"./scripts/forecast.js\";\nimport { currentUnit, unitSwitch, getUnitSymbol } from \"./scripts/unitSwitch.js\";\nimport { changePinnedUnits } from \"./scripts/refreshPinned.js\";\nimport {birdyWeatherComments, birdyUnitChange} from \"./scripts/quirkyBirdy.js\";\n\nconst searchBar = document.querySelector(\".search-bar\");\nconst moreDetails = document.querySelector(\".details\");\nconst moreDetails2 = document.querySelector(\".details-2\");\nconst geoSearch = document.querySelector(\"#geo-search\");\nconst picture = document.querySelector(\".image img\");\nconst searchForm = document.querySelector(\".search\");\nconst loader = document.querySelector(\".loader\");\nconst pin = document.querySelector(\".pin\");\nconst refresh = document.querySelector('.refresh');\n\n// Display the empty favorites message on startup\ncheckIfEmpty();\n\n// API calls\nfunction fetchWeather(city) {\n    refresh.style.display = \"none\";\n    loader.style.display = \"block\";\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${key}&units=${currentUnit}`)\n    .then(response => response.json())\n    .then(data => { \n        if (data.cod !== '404') { \n            deleteHourlyForecast();\n            deleteForecast();\n            document.querySelector('.weather').classList.add('fadeIn');\n            picture.classList.add('fadeIn');\n            document.querySelector('.card').style.height = '350px';\n            searchBar.style.border = '1px solid #ccc';\n            searchBar.classList.remove('shake');\n            document.querySelector('#body').style.height = '3000px';\n            displayWeather(data); \n            moreDetails.classList.add('fadeIn');\n            moreDetails.style.display = \"block\";\n            moreDetails2.classList.add('fadeIn');\n            moreDetails2.style.display = \"block\";\n            geoSearch.style.marginTop = \"4px\";\n            loader.style.display = \"none\";\n            refresh.style.display = \"block\";\n            pin.classList.add('fadeIn');\n            getForecast(data.coord.lat, data.coord.lon);\n        } else {\n           searchBar.classList.add('shake');\n           searchBar.style.border = '1px solid #cc0505';\n           searchBar.placeholder = \"City not found\";\n           loader.style.display = \"none\";\n            refresh.style.display = \"block\";\n        }\n     })\n    }\n\nfunction displayWeather(data) {\n    const { name } = data;\n    const { speed } = data.wind;\n    const { icon, description } = data.weather[0];\n    const { temp, humidity } = data.main;\n    document.querySelector('.location').innerText = name;\n    document.querySelector(\".temp\").innerText = Math.round(temp) + `${getUnitSymbol()}`;\n    document.querySelector(\".description\").innerText = capitalize(description);\n    document.querySelector(\".humidity\").innerText = `Humidity: ${humidity}%`;\n    document.querySelector(\".wind\").innerText = `Wind Speed: ${speed} MPH`;\n    if (icon.includes(\"d\")) {\n        picture.src = getDayIcon(icon);\n        picture.style.display = \"block\"\n    } else {\n        picture.src = getNightIcon(icon);\n        picture.style.display = \"block\"\n    }\n\n    if (checkIfFavorited(name)) {\n        pin.classList.remove('unpinned');\n        pin.classList.add('pinned');\n    } else {\n        pin.classList.remove('pinned');\n        pin.classList.add('unpinned');\n    };\n}\n\n\nwindow.fetchWeather = fetchWeather;\nwindow.displayWeather = displayWeather;\n\n// Search button event listener\nsearchForm.addEventListener(\"submit\", function(event) {\n    event.preventDefault();\n    let input = document.querySelector(\".search-bar\").value;\n    if (searchBar.value === \"\") return;\n    fetchWeather(input);\n    searchBar.value = \"\";\n    searchBar.placeholder = \"Enter a location\";\n})\n\n\n// Geolocation\nconst options = {\n    enableHighAccuracy: true,\n    timeout: 5000,\n}\n\nfunction success(position) {\n    let lat = position.coords.latitude;\n    let lon = position.coords.longitude;\n    fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${key}&units=imperial`)\n        .then(response => response.json())\n        .then(data => {\n            searchBar.placeholder = \"Enter a location\";\n            loader.style.display = \"none\";\n            return fetchWeather(data.name);\n        });\n}\n\nfunction error(err) { \n    console.warn(`ERROR(${err.code}): ${err.message}`);\n    loader.style.display = \"none\";\n    if (err.code === 1) {\n        searchBar.classList.add('shake');\n        searchBar.style.border = '1px solid #cc0505';\n        searchBar.placeholder = \"Location access denied\";\n    } else if (err.code === 2) {\n        searchBar.placeholder = \"Can't find location\";\n        searchBar.classList.add('shake');\n        searchBar.style.border = '1px solid #cc0505';\n    } else if (err.code === 3) {\n        searchBar.placeholder = \"Location request timed out\";\n        searchBar.classList.add('shake');\n        searchBar.style.border = '1px solid #cc0505';\n    }\n}\n\ngeoSearch.addEventListener('click', function(event) {\n    searchBar.placeholder = \"Finding location...\";\n    refresh.style.display = \"none\";\n    loader.style.display = \"block\";\n    navigator.geolocation.getCurrentPosition(success, error, options);\n});\n\n// Scroll to details\nlet detailsButton = document.querySelector('.details-button');\n\ndetailsButton.addEventListener('click', function(event) {\n    event.preventDefault();\n    document.querySelector('.details').scrollIntoView({behavior: 'smooth', block: 'center'});\n})\n\n// Burger toggle\nconst burger = document.querySelector('.burger');\nburger.addEventListener('click', openMenu);\n\n// Pin locations\npin.addEventListener('click', pinToggle);\npin.addEventListener('click', checkIfEmpty);\n\n// Horizontal scroll for hourly and daily forecast\nconst hoursBox = document.querySelector('.hours');\nconst daysBox = document.querySelector('.days');\n\nhoursBox.addEventListener('wheel', function(event) {\n    event.preventDefault();\n    hoursBox.scrollLeft += event.deltaY;\n}); \n\ndaysBox.addEventListener('wheel', function(event) {\n    event.preventDefault();\n    daysBox.scrollLeft += event.deltaY;\n});\n\n// Unit toggle\nconst unitToggle = document.querySelector('#unit-toggle input');\nunitToggle.addEventListener('change', unitSwitch);\n\nconst unitMessage = document.querySelector('.unit-message');\nunitToggle.addEventListener('change', function() {\n    if (unitMessage.innerHTML === 'Fahrenheit') {\n        unitMessage.style.display = \"block\";\n        unitMessage.innerHTML = 'Celsius';\n        setTimeout(() => {\n            unitMessage.style.display = \"none\";}\n            , 2000)\n    } else {\n        unitMessage.innerHTML = 'Fahrenheit';\n        unitMessage.style.display = \"block\";\n        setTimeout(() => {\n            unitMessage.style.display = \"none\";\n        }, 2000)\n    }\n});\n\nunitToggle.addEventListener('change', birdyUnitChange, {once: true});\n\n// Refresh button \nrefresh.addEventListener('click', function(event) {\n    event.preventDefault();\n    if (document.querySelector('.location').innerText === \"\") {\n        searchBar.classList.add('shake');\n        setTimeout(() => {\n            searchBar.classList.remove('shake');\n        }, 500)\n        return;\n    } else {\n        fetchWeather(document.querySelector('.location').innerText);\n        changePinnedUnits();\n    }\n})\n\n// Click on pinned location to fetch weather\ndocument.addEventListener('click', function(event) {\n    let element = event.target;\n    if (element.classList.contains('pinned-location_name')) {\n        fetchWeather(element.innerText);\n    } else if (element.classList.contains('pinned-location_icon')) {\n        fetchWeather(element.parentElement.className.split(\"-\").join(\" \"));\n    } else if (element.classList.contains('pinned-location_temp')) {\n       fetchWeather(element.parentElement.className.split(\"-\").join(\" \"));\n    } else if (element.classList.contains('pinned-icon')) {\n        console.log(element.id.split(\"-\").join(\" \"));\n        fetchWeather(element.id.split(\"-\").join(\" \"));\n    }\n})\n\n// Birdy follows cursor slowly\nconst birdy = document.querySelector('.birdy');\ndocument.addEventListener('mousemove', function(event) {\n    birdy.style.left = (event.pageX) + 'px';\n    birdy.style.top = (event.pageY - 50) + 'px';\n});\n\n","// Function to change the units on the pinned locations\nimport {getUnitSymbol} from './unitSwitch.js';\n\nexport function changePinnedUnits() {\n    const pinnedUnits = document.querySelectorAll('.pinned-location_temp');\n    pinnedUnits.forEach(temp => {\n        if (!temp.innerHTML.includes(getUnitSymbol())) {\n            if (temp.innerHTML.includes('°C')) {\n                let num = parseInt(temp.innerHTML.split(\" \")[0]);\n                let fahrenheit = Math.round((num * 9/5) + 32);\n                temp.innerHTML = `${fahrenheit} °F`;\n            } else {\n                let num = parseInt(temp.innerHTML.split(\" \")[0]);\n                let celsius = Math.round((num - 32) * 5/9);\n                temp.innerHTML = `${celsius} °C`;\n            }\n        }\n    })\n}"],"names":["getDayIcon","icon","getNightIcon","document","querySelector","favorite","burger","favorites","pin","checkIfFavorited","location","i","length","displayPinnedLocations","className","split","join","pinnedLocation","createElement","classList","add","innerHTML","appendChild","window","emptyMessage","checkIfEmpty","style","display","units","currentUnit","unitSwitch","getUnitSymbol","key","getForecast","lat","lon","fetch","then","response","json","data","cod","hours","hour","temp","Math","round","hourly","weather","src","includes","conversion","timeConversion","Date","dt","getHours","displayHourlyForecast","displayDailyForecast","console","log","deleteForecast","week","days","day","minTemp","daily","min","maxTemp","max","getDay","capitalize","description","string","map","word","charAt","toUpperCase","slice","birdy","birdyComment","clearBirdyComment","setTimeout","addEventListener","once","birdyToggle","firstChild","remove","newBirdy","comment","body","searchBar","moreDetails","moreDetails2","geoSearch","picture","searchForm","loader","refresh","fetchWeather","city","height","border","displayWeather","marginTop","coord","placeholder","name","speed","wind","humidity","main","innerText","event","preventDefault","input","value","options","enableHighAccuracy","timeout","success","position","coords","latitude","longitude","error","err","warn","code","message","navigator","geolocation","getCurrentPosition","scrollIntoView","behavior","block","contains","background","currentLocation","currentIcon","currentTemp","toBeRemoved","removeChild","removeFromSidebar","splice","removeFromFavorites","push","hoursBox","daysBox","scrollLeft","deltaY","unitToggle","unitMessage","querySelectorAll","forEach","num","parseInt","fahrenheit","celsius","element","target","parentElement","id","left","pageX","top","pageY"],"sourceRoot":""}